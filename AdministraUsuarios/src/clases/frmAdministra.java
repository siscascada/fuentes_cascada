/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import java.awt.Checkbox;
import java.awt.CheckboxGroup;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Agustin
 */
public class frmAdministra extends javax.swing.JFrame{

    /**
     * Creates new form frmAdministra
     */public String suc,login;
     
    public frmAdministra(String[] args) {
        initComponents();
       
         
        
        btnGuardaPermisos.setEnabled(false);
        
        suc=args[3];
         login=args[2];
         lblServidor.setText(args[5]);
         lblInstancia.setText(args[4]);
         lblSucursal.setText(args[3]);
         
         if (this.getSuc()=="VFA"){
         txtRuta.setText("java -jar \\\\pruebas\\sigc\\");
         }
         if (this.getSuc()=="EAL"){
         txtRuta.setText("java -jar \\\\villa\\sigc\\");
         }
         if (this.getSuc()=="LLO"){
         txtRuta.setText("java -jar \\\\practicas\\sigc\\");
         }
        
           
         seleccionaUsuarios();
         
         configuraTablaServidor();
         seleccionaBD();
         seleccionaInstancias();
   
    }  

    public String getSuc() {
        return suc;
    }

    public void setSuc(String suc) {
        this.suc = suc;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    private frmAdministra() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        lblServidor = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblInstancia = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblSucursal = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        cmbUsuarios = new javax.swing.JComboBox();
        lblPermisos = new javax.swing.JLabel();
        chkContabilidad = new javax.swing.JCheckBox();
        chkAlmacen = new javax.swing.JCheckBox();
        chkVentas = new javax.swing.JCheckBox();
        chkEventos = new javax.swing.JCheckBox();
        chkProduccion = new javax.swing.JCheckBox();
        chkPersonal = new javax.swing.JCheckBox();
        chkFacturacion = new javax.swing.JCheckBox();
        chkVehiculos = new javax.swing.JCheckBox();
        chkActivos = new javax.swing.JCheckBox();
        chkCambios = new javax.swing.JCheckBox();
        btnGuardaPermisos = new javax.swing.JButton();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        cmbModulos = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstLista = new javax.swing.JList();
        txtGuardaOpciones = new javax.swing.JButton();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbTipoMenu = new javax.swing.JComboBox();
        cmbModulosMenu = new javax.swing.JComboBox();
        txtNombreOpcion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDescOpcion = new javax.swing.JTextField();
        lblNombreJar = new javax.swing.JLabel();
        txtNombreJar = new javax.swing.JTextField();
        txtRuta = new javax.swing.JTextField();
        btnGuardarOpcionesMenu = new javax.swing.JButton();
        jInternalFrame4 = new javax.swing.JInternalFrame();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        txtSysdba = new javax.swing.JTextField();
        cmbGuardaUserNuevo = new javax.swing.JButton();
        jInternalFrame5 = new javax.swing.JInternalFrame();
        cmbUsuarios2 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUsuarioServidor = new javax.swing.JTable();
        cmbServidores = new javax.swing.JComboBox();
        btnAsignarServer = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblUSBDI = new javax.swing.JTable();
        cmbBD = new javax.swing.JComboBox();
        cmbInstancias = new javax.swing.JComboBox();
        btnAsignaPermiso = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrador de usuarios y permisos");

        jLabel3.setText("SERVIDOR:");

        jLabel4.setText("INSTANCIA:");

        jLabel5.setText("SUCURSAL:");

        jInternalFrame1.setTitle("Editar permisos del usuario");
        jInternalFrame1.setVisible(true);

        jLabel1.setText("Listado de usuarios");

        cmbUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUsuariosActionPerformed(evt);
            }
        });

        lblPermisos.setText("Permisos a módulos del sistema");

        chkContabilidad.setText("1.- Contabilidad");

        chkAlmacen.setText("2.- Almacen");

        chkVentas.setText("3.- Ventas");

        chkEventos.setText("4.- Eventos");

        chkProduccion.setText("5.- Producción");

        chkPersonal.setText("6.- Personal");

        chkFacturacion.setText("7.- Facturación");

        chkVehiculos.setText("8.- Vehículos");

        chkActivos.setText("9.- Activos Fijos");

        chkCambios.setText("10.- Cambios");

        btnGuardaPermisos.setText("Guardar");
        btnGuardaPermisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardaPermisosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkVehiculos)
                    .addComponent(chkFacturacion)
                    .addComponent(chkPersonal)
                    .addComponent(chkProduccion)
                    .addComponent(chkEventos)
                    .addComponent(chkVentas)
                    .addComponent(chkAlmacen)
                    .addComponent(chkContabilidad)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPermisos, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardaPermisos)
                    .addComponent(chkCambios)
                    .addComponent(chkActivos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPermisos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkContabilidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkAlmacen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkVentas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkEventos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkProduccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkPersonal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFacturacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkVehiculos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkActivos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkCambios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardaPermisos)
                .addContainerGap(265, Short.MAX_VALUE))
        );

        jInternalFrame2.setTitle("Opciones Menú");
        jInternalFrame2.setVisible(true);

        jLabel2.setText("Usuario seleccionado:");

        cmbModulos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Seleccionar Modulo --", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        cmbModulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbModulosActionPerformed(evt);
            }
        });

        jLabel6.setText("Módulos del sistema:");

        jScrollPane1.setViewportView(lstLista);

        txtGuardaOpciones.setText("HABILITAR / INHABILITAR");
        txtGuardaOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGuardaOpcionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(txtGuardaOpciones))
                            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbModulos, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbModulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGuardaOpciones)
                .addContainerGap())
        );

        jInternalFrame3.setTitle("Nuevas opciones Menú");
        jInternalFrame3.setVisible(true);

        jLabel7.setText("Nombre de la opción en Menú:");

        jLabel8.setText("Descripción de la opción:");

        jLabel9.setText("Tipo de opción en el menú:");

        jLabel10.setText("Módulo al que pertenece:");

        cmbTipoMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRO", "REP" }));

        cmbModulosMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Modulo --", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        cmbModulosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbModulosMenuActionPerformed(evt);
            }
        });

        jLabel11.setText("Ruta predeterminada link:");

        lblNombreJar.setText("Nombre del ejecutable .JAR:");

        txtRuta.setText("java -jar \\\\pruebas\\sigc\\");

            btnGuardarOpcionesMenu.setText("GUARDAR");
            btnGuardarOpcionesMenu.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnGuardarOpcionesMenuActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
            jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
            jInternalFrame3Layout.setHorizontalGroup(
                jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame3Layout.createSequentialGroup()
                            .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNombreJar)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDescOpcion)
                                .addComponent(txtNombreOpcion)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                                            .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(1, 1, 1))
                                        .addComponent(txtNombreJar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jInternalFrame3Layout.createSequentialGroup()
                            .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnGuardarOpcionesMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                                        .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10))
                                        .addGap(35, 35, 35)
                                        .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbTipoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbModulosMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            jInternalFrame3Layout.setVerticalGroup(
                jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame3Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3)
                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNombreJar)
                        .addComponent(txtNombreJar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtNombreOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtDescOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(cmbTipoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(cmbModulosMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnGuardarOpcionesMenu)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            jInternalFrame4.setTitle("Alta de usuarios nuevos al sistema");
            jInternalFrame4.setVisible(true);

            jLabel12.setText("LOGIN:");

            jLabel13.setText("USUARIO SYSDBA:");

            cmbGuardaUserNuevo.setText("GUARDAR");
            cmbGuardaUserNuevo.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmbGuardaUserNuevoActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jInternalFrame4Layout = new javax.swing.GroupLayout(jInternalFrame4.getContentPane());
            jInternalFrame4.getContentPane().setLayout(jInternalFrame4Layout);
            jInternalFrame4Layout.setHorizontalGroup(
                jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame4Layout.createSequentialGroup()
                    .addGroup(jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame4Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSysdba, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jInternalFrame4Layout.createSequentialGroup()
                            .addGap(105, 105, 105)
                            .addComponent(cmbGuardaUserNuevo)))
                    .addGap(0, 63, Short.MAX_VALUE))
            );
            jInternalFrame4Layout.setVerticalGroup(
                jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(txtSysdba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(cmbGuardaUserNuevo)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            jInternalFrame5.setTitle("Accesos de usuarios a servidores");
            jInternalFrame5.setVisible(true);

            cmbUsuarios2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmbUsuarios2ActionPerformed(evt);
                }
            });

            jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
            jLabel14.setText("Listado de usuarios");

            tblUsuarioServidor.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            tblUsuarioServidor.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tblUsuarioServidorMouseClicked(evt);
                }
            });
            jScrollPane2.setViewportView(tblUsuarioServidor);

            cmbServidores.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmbServidoresActionPerformed(evt);
                }
            });

            btnAsignarServer.setText("ASIGNAR");
            btnAsignarServer.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnAsignarServerActionPerformed(evt);
                }
            });

            jLabel15.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
            jLabel15.setText("Listado de servidores");

            tblUSBDI.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
            tblUSBDI.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            tblUSBDI.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tblUSBDIMouseClicked(evt);
                }
            });
            jScrollPane3.setViewportView(tblUSBDI);

            cmbBD.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
            cmbBD.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmbBDActionPerformed(evt);
                }
            });

            cmbInstancias.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
            cmbInstancias.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmbInstanciasActionPerformed(evt);
                }
            });

            btnAsignaPermiso.setText("GRABAR PERMISO");
            btnAsignaPermiso.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnAsignaPermisoActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jInternalFrame5Layout = new javax.swing.GroupLayout(jInternalFrame5.getContentPane());
            jInternalFrame5.getContentPane().setLayout(jInternalFrame5Layout);
            jInternalFrame5Layout.setHorizontalGroup(
                jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                        .addComponent(jScrollPane3)
                        .addGroup(jInternalFrame5Layout.createSequentialGroup()
                            .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbUsuarios2, 0, 92, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(22, 22, 22)
                            .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jInternalFrame5Layout.createSequentialGroup()
                                    .addComponent(cmbServidores, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnAsignarServer)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jInternalFrame5Layout.createSequentialGroup()
                            .addComponent(cmbBD, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cmbInstancias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame5Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAsignaPermiso)
                    .addGap(188, 188, 188))
            );
            jInternalFrame5Layout.setVerticalGroup(
                jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame5Layout.createSequentialGroup()
                    .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel15))
                    .addGap(8, 8, 8)
                    .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbUsuarios2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbServidores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAsignarServer))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbInstancias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(9, 9, 9)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnAsignaPermiso))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblInstancia, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(lblSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jInternalFrame2)
                                .addComponent(jInternalFrame4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jInternalFrame5)
                                    .addContainerGap())
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jInternalFrame3)
                                    .addGap(12, 12, 12))))))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel4)
                        .addComponent(lblInstancia, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(lblSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jInternalFrame2)
                                .addComponent(jInternalFrame3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jInternalFrame5)
                                .addComponent(jInternalFrame4)))
                        .addComponent(jInternalFrame1))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents
    public void borraListado(){
         DefaultListModel lm=new DefaultListModel();
        lstLista.setModel(lm);
        lm.removeAllElements();
    }
    private void cmbUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUsuariosActionPerformed
       
        borraListado();
        
        if (cmbUsuarios.getSelectedIndex()>0)
        {
            try {
                ResultSet rs,rs2;
                String permiso="";
    
                String query="SELECT C_PERMISO FROM TUS_USERMENUPERMISO\n"+
                        " WHERE C_SUCURSAL='"+this.getSuc()+"' AND C_LOGIN='"+(String) this.cmbUsuarios.getSelectedItem()+"'";
                rs=ConexionBD.querySelect(query);
                if(rs.next()==true)
                {   
                    permiso=rs.getString("C_PERMISO");
                    
                }
                
                rs.close();
                btnGuardaPermisos.setEnabled(true);
                lblUsuario.setText((String) this.cmbUsuarios.getSelectedItem());
                if (permiso.charAt(0)=='1'){ //CONTABILIDAD
                    chkContabilidad.setSelected(true);
                }else{chkContabilidad.setSelected(false);}
                if (permiso.charAt(1)=='1'){ //ALMACEN
                    chkAlmacen.setSelected(true);
                }else{chkAlmacen.setSelected(false);}
                if (permiso.charAt(2)=='1'){ //VENTA
                    chkVentas.setSelected(true);
                }else{chkVentas.setSelected(false);}
                if (permiso.charAt(3)=='1'){ //EVENTOS
                    chkEventos.setSelected(true);
                }else{chkEventos.setSelected(false);}
                if (permiso.charAt(4)=='1'){ //PRODUCCION
                    chkProduccion.setSelected(true);
                }else{chkProduccion.setSelected(false);}
                if (permiso.charAt(5)=='1'){ //PERSONAL
                    chkPersonal.setSelected(true);
                }else{chkPersonal.setSelected(false);}
                if (permiso.charAt(6)=='1'){ //FACTURACION
                    chkFacturacion.setSelected(true);
                }else{chkFacturacion.setSelected(false);}
                if (permiso.charAt(7)=='1'){ //VEHICULOS
                    chkVehiculos.setSelected(true);
                }else{chkVehiculos.setSelected(false);}
                if (permiso.charAt(8)=='1'){ //ACTIVOS
                    chkActivos.setSelected(true);
                }else{chkActivos.setSelected(false);}
                if (permiso.charAt(9)=='1'){ //CAMBIOS
                    chkCambios.setSelected(true);
                }else{chkCambios.setSelected(false);}
            } catch (SQLException ex) {
                Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            chkContabilidad.setSelected(false);
            chkAlmacen.setSelected(false);
            chkVentas.setSelected(false);
            chkEventos.setSelected(false);
            chkProduccion.setSelected(false);
            chkPersonal.setSelected(false);
            chkFacturacion.setSelected(false);
            chkVehiculos.setSelected(false);
            chkActivos.setSelected(false);
            chkCambios.setSelected(false);
            btnGuardaPermisos.setEnabled(false);
            lblUsuario.setText("---");
        }
    }//GEN-LAST:event_cmbUsuariosActionPerformed

    private void btnGuardaPermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardaPermisosActionPerformed
        String cadpermiso="";
     
        
            if(chkContabilidad.isSelected())
                cadpermiso+="1";
            else
                cadpermiso+="0";
           
            
            if(chkAlmacen.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkVentas.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkEventos.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkProduccion.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkPersonal.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkFacturacion.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkVehiculos.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkActivos.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            if(chkCambios.isSelected())
               cadpermiso+="1";
            else
                cadpermiso+="0";
            
            
            cadpermiso+="0000000000";
           
        try {
             // TODO add your handling code here:
             ConexionBD.queryInsertUpdateDelete("UPDATE TUS_USERMENUPERMISO SET C_PERMISO='"+cadpermiso+"'\n"+
             "WHERE C_LOGIN='"+(String) this.cmbUsuarios.getSelectedItem()+"' AND C_SUCURSAL='"+this.getSuc()+"'");
             
              JOptionPane.showMessageDialog(null, "Los cambios fueron realizados correctamente");
             
             
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_btnGuardaPermisosActionPerformed

    private void cmbModulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbModulosActionPerformed
         try {
             // TODO add your handling code here:
             ResultSet rs;
           
             
            String query="SELECT Q.IDMODLINK AS IDMODLINK,Q.NOMBRELINK AS NOMBRELINK,DECODE(P.ESTACCESO,'V','HABILITADO','NO HABILITADO') AS ESTADO\n" +
"FROM\n" +
"(SELECT A.N_IDMODULOLINK AS MODLINK,A.N_IDLINK AS LINK,B.C_ESTADOACCESO AS ESTACCESO\n" +
"FROM TME_USERACCESO B , TME_MODULOLINK A  \n" +
"WHERE A.N_IDMODULOLINK=B.N_IDMODULOLINK\n" +
"AND B.C_LOGIN='"+this.lblUsuario.getText()+"'\n" +
"AND A.C_CODSUCLINK='"+this.getSuc()+"'\n" +
"AND A.N_IDMODULO='"+(String) this.cmbModulos.getSelectedItem()+"'\n" +
"AND B.C_ESTADOACCESO='V') P\n" +
"RIGHT OUTER JOIN\n" +
"(SELECT T.N_IDMODULOLINK AS IDMODLINK,C.C_NOMBRELINK AS NOMBRELINK\n" +
"FROM TME_MODULOLINK T,TME_LINK C\n" +
"WHERE T.N_IDLINK=C.N_IDLINK \n" +
"AND T.N_IDMODULO='"+(String) this.cmbModulos.getSelectedItem()+"'\n" +
"AND T.C_CODSUCLINK='"+this.getSuc()+"') Q\n" +
"ON P.MODLINK=Q.IDMODLINK ORDER BY Q.IDMODLINK";
             
             rs=ConexionBD.querySelect(query);

             DefaultListModel lm=new DefaultListModel();
             
            
             while(rs.next()){
                 lm.addElement(rs.getString("IDMODLINK")+"-"+rs.getString("NOMBRELINK")+"/ "+rs.getString("ESTADO"));
                 
             }
             rs.close();
             
             lstLista.setModel(lm);
             lstLista.setBackground(Color.yellow);
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_cmbModulosActionPerformed

    private void txtGuardaOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGuardaOpcionesActionPerformed
        // TODO add your handling code here:
        String cadena="",id="";
        int pos=0;
        /*for (int i=0;i<5;i++)
        {
        if(lstLista.isSelectedIndex(i)==true)
            JOptionPane.showMessageDialog(null,(String) lstLista.getSelectedValue());
        else
            JOptionPane.showMessageDialog(null,"No esta seleccionado");
        }*/
        if(lstLista.isSelectionEmpty()){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una opción para cambiar su estado");
        }
        else
        {
  
            cadena=(String) lstLista.getSelectedValue();
            pos=cadena.indexOf("-");
            id=cadena.substring(0, pos);
            String query="",estado="";
                    //si es "" inserta a la tabla TME_USERACCESO
                if(revisaUsuarioMenuPermiso(id,this.lblUsuario.getText()).matches("")){
                    query="INSERT INTO TME_USERACCESO (C_LOGIN,N_IDMODULOLINK,C_ESTADOACCESO) \n"+
                          "VALUES ('"+this.lblUsuario.getText()+"','"+id+"','V')";
               
                }else{ //hace update al estado
                        if(revisaUsuarioMenuPermiso(id,this.lblUsuario.getText()).matches("V")){
                            estado="I";
                        }else{
                            estado="V";
                        }
                    query="UPDATE TME_USERACCESO SET C_ESTADOACCESO='"+estado+"' WHERE \n"+
                            "C_LOGIN='"+this.lblUsuario.getText()+"' AND N_IDMODULOLINK='"+id+"'";
                }
            
            try {
                ConexionBD.queryInsertUpdateDelete(query);
                JOptionPane.showMessageDialog(null, "La opcion del menu seleccionada ha cambiado de estado");
                borraListado();
                
            }catch (SQLException ex2) {
            Logger.getLogger(ConexionBD.class.getName()).log(Level.SEVERE, null, ex2);
            
            }
            
        }
        
    }//GEN-LAST:event_txtGuardaOpcionesActionPerformed

    public String revisaUsuarioMenuPermiso(String idmodlink,String usuario){
        try {
            ResultSet rs;
            String sql = "SELECT C_ESTADOACCESO FROM TME_USERACCESO WHERE C_LOGIN='"
                    + usuario +"' AND N_IDMODULOLINK= '"+ idmodlink +"'";
            rs=ConexionBD.querySelect(sql);
            if(rs.next()) {
                return rs.getString("C_ESTADOACCESO");
            } else {
                return "";
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            return "";
        }
    }
    
    private void cmbModulosMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbModulosMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbModulosMenuActionPerformed

    private void btnGuardarOpcionesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarOpcionesMenuActionPerformed
        String opcionmenu;
        //validaciones antes de grabar
        if(!txtNombreJar.getText().endsWith(".jar")){
            JOptionPane.showMessageDialog(null, "El nombre del ejecutable debe terminar en .jar(en minúsculas)");
            return;
        }
        
        if((String)cmbModulosMenu.getSelectedItem()=="-- Modulo --"){
           JOptionPane.showMessageDialog(null, "Debe seleccionar un módulo");
            return; 
        }
        
        if ((txtRuta.getText().matches(""))||(txtNombreJar.getText().matches(""))||(txtNombreOpcion.getText().matches(""))){
            JOptionPane.showMessageDialog(null, "Los campos Ruta, Nombre ejecutable y Nombre Opción son obligatorios");
            return;
        }
        
        opcionmenu=this.txtRuta.getText().toLowerCase()+this.txtNombreJar.getText();
        
        if(revisaOpcionMenu(opcionmenu)==true){
            JOptionPane.showMessageDialog(null, "La opcíón: "+opcionmenu+" ya fue creada en el modulo: "+(String)this.cmbModulosMenu.getSelectedItem());
            return;
        }
        
        
        //si llega aqui graba la nueva opcion en TME_LINK y TME_MODULOLINK
        //mediante procedimiento almacenado PME_NUEVAOPCIONMENU
        try {
             ResultSet rs;
             ConexionBD.cnn.setAutoCommit(false);
             String query="SELECT N_IDLINK FROM \n" +
            "PME_NUEVAOPCIONMENU('"+opcionmenu+"','"+this.txtNombreOpcion.getText()+"','"+this.txtDescOpcion.getText()+"',\n"+
                     "'"+(String)this.cmbTipoMenu.getSelectedItem()+"',\n"+
                     "'"+(String)this.cmbModulosMenu.getSelectedItem()+"','"+this.getSuc()+"')";
             rs=ConexionBD.querySelect(query);
             if(rs.next()) {
                JOptionPane.showMessageDialog(null, "La nueva opción del menu fue creada");
                ConexionBD.cnn.commit();
                ConexionBD.cnn.setAutoCommit(true);
             }
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
             
            try {
                JOptionPane.showMessageDialog(null, "Existio un problema al intentar guardar, no se grabará ningun dato");
                ConexionBD.cnn.rollback();
                ConexionBD.cnn.setAutoCommit(true);
            } catch (SQLException ex1) {
                Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex1);
            }
            
         }
    }//GEN-LAST:event_btnGuardarOpcionesMenuActionPerformed

    private void cmbGuardaUserNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGuardaUserNuevoActionPerformed
        
        //validacion de campos
        if(txtLogin.getText().contains(" ")){
            JOptionPane.showMessageDialog(null, "El campo LOGIN no puede contener espacios en blanco");
            return;
        }
        
         if(txtSysdba.getText().contains(" ")){
            JOptionPane.showMessageDialog(null, "El campo USUARIO SYSDBA no puede contener espacios en blanco");
            return;
        }
        
        //Revisa si ya existe el usuario
         if(revisaUsuarioMenu(this.txtLogin.getText().toUpperCase(),this.getSuc())){
             JOptionPane.showMessageDialog(null, "El Usuario que desea ingresar ya existe en esta sucursal");
             return;
         }else{
             //no existe y da de alta
             String query="INSERT INTO TUS_USERMENUPERMISO (C_LOGIN,C_SUCURSAL,C_PERMISO,C_ACCION,C_USERSYSDBA)\n"+
                     " VALUES('"+this.txtLogin.getText().toUpperCase()+"','"+this.getSuc()+"','00000000000000000000','V','"+this.txtSysdba.getText().toUpperCase()+"')";
            try {
                ConexionBD.queryInsertUpdateDelete(query);
                JOptionPane.showMessageDialog(null, "El Usuario fue dado de alta exitosamente");
                seleccionaUsuarios();
                this.txtLogin.setText("");
                this.txtSysdba.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
            }
         }
    }//GEN-LAST:event_cmbGuardaUserNuevoActionPerformed

    private void cmbUsuarios2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUsuarios2ActionPerformed
        if ((String)cmbUsuarios2.getSelectedItem()!="Usuarios"){
           llenaTablaServidor();
           seleccionaServidores();
           vaciaTablaUserServerBDInstancia();
        }
        
    }//GEN-LAST:event_cmbUsuarios2ActionPerformed

    private void tblUsuarioServidorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuarioServidorMouseClicked
        
        if(!tblUsuarioServidor.getValueAt(tblUsuarioServidor.getSelectedRow(), 0).equals("")){
            
            llenaTablaUserServerBDInstancia();
        }
        
        
        
        //DefaultTableModel dtm= new DefaultTableModel();
        
        //tblUsuarioServidor.setModel(dtm);
        
        
        //JOptionPane.showMessageDialog(this, tblUsuarioServidor.getSelectedRow()+"-"+tblUsuarioServidor.getSelectedColumn());
        // JOptionPane.showMessageDialog(this,tblUsuarioServidor.getValueAt(tblUsuarioServidor.getSelectedRow(), tblUsuarioServidor.getSelectedColumn()));
        //configuraTablaServidor();
        
    }//GEN-LAST:event_tblUsuarioServidorMouseClicked

    private void cmbServidoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbServidoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbServidoresActionPerformed

    private void btnAsignarServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarServerActionPerformed
        
     if((String)cmbUsuarios2.getSelectedItem()=="Usuarios"){
         A.mensaje("Debe selecionar un usuario");
         return;
     }
     
     if((String)cmbServidores.getSelectedItem()=="Servidores NO Asignados"){
         A.mensaje("Debe selecionar un servidor");
         return;
     }
   
             if (A.confirma("Desea guardar la configuración?")==0){
             String cadena=(String)cmbServidores.getSelectedItem();
             int pos=0;
             pos=cadena.indexOf("-");
             cadena=cadena.substring(0, pos);
            
           
                 //crea el permiso
                 String query="INSERT INTO TUS_ACCESOSERVIDOR (C_LOGIN,N_IDSERVIDOR,C_ACCION)\n"+
                         "VALUES ('"+(String)cmbUsuarios2.getSelectedItem()+"','"+cadena+"','V')";
                 
         try {
             ConexionBD.queryInsertUpdateDelete(query);
             A.mensaje("El acceso fue creado exitosamente");
             seleccionaServidores();
             llenaTablaServidor();
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
                 
             }
       
    }//GEN-LAST:event_btnAsignarServerActionPerformed

    private void tblUSBDIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUSBDIMouseClicked
        // A.mensaje((String) tblUSBDI.getValueAt(tblUSBDI.getSelectedRow(), 1));
    }//GEN-LAST:event_tblUSBDIMouseClicked

    private void cmbBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBDActionPerformed

    private void cmbInstanciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInstanciasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbInstanciasActionPerformed

    private void btnAsignaPermisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignaPermisoActionPerformed
            
      
       
        if(!tblUsuarioServidor.isCellSelected(tblUsuarioServidor.getSelectedRow(), tblUsuarioServidor.getSelectedColumn())){    
            A.mensaje("Primero debe seleccionar un acceso de la primera tabla");
            return;
        }
        
        if(cmbBD.getSelectedItem().equals("Bases de datos"))
        {
            A.mensaje("Debe seleccionar una base de datos");
            return;
        }
        
        if(cmbInstancias.getSelectedItem().equals("Instancias"))
        {
            A.mensaje("Debe seleccionar una Instancia");
            return;
        }
        
        
        String inst,bd;
        int pos1=0,pos2=0;
        inst=(String)cmbInstancias.getSelectedItem();
        pos1=inst.indexOf("-");
        inst=inst.substring(0, pos1);
        
        bd=(String)cmbBD.getSelectedItem();
        pos2=bd.indexOf("-");
        bd=bd.substring(0, pos2);
        
        
        if (revisaAccesoInstanciaBD((String)tblUsuarioServidor.getValueAt(tblUsuarioServidor.getSelectedRow(), 0),inst,bd)){
            A.mensaje("La combinación entre acceso, instancia y base de datos ya fue configurada anteriormente para el usuario seleccionado");
            return;
        }
        
        if(A.confirma("Va a generar un nuevo permiso de acceso, desea continuar?")==0){
        
        //inserta el acceso, instancia y bd a TUS_SERVINSTBD
        
        
        String query="INSERT INTO TUS_SERVINSTBD (N_IDACCESO,N_IDINSTANCIA,N_IDBD,C_ACCION) \n" +
              "VALUES ('"+(String)tblUsuarioServidor.getValueAt(tblUsuarioServidor.getSelectedRow(), 0)+"','"+inst+"','"+bd+"','V')";  
         try {
             ConexionBD.queryInsertUpdateDelete(query);
             A.mensaje("El permiso fue creado correctamente");
         } catch (SQLException ex) {
            
             A.mensaje(ex.getMessage());
         }
       }//end if A.confirma
        
        
    }//GEN-LAST:event_btnAsignaPermisoActionPerformed
    
    public boolean revisaAccesoInstanciaBD(String acceso,String instancia,String bd){
        String query="SELECT (1) FROM TUS_SERVINSTBD \n" +
                     "WHERE N_IDACCESO='"+acceso+"' AND N_IDINSTANCIA='"+instancia+"' AND N_IDBD='"+bd+"' ";
             ResultSet rs; 
        try {
             
             rs=ConexionBD.querySelect(query);
             if (rs.next()){
                 rs.close();
                 return true;
             }else{
                 rs.close();
                 return false;
             }} catch (SQLException ex) {
             A.mensaje(ex.getMessage());
         }
         return false;
    }
    
    public boolean revisaUsuarioMenu(String usuario,String sucursal){
         try {
             ResultSet rs;
             String query="SELECT (1) FROM TUS_USERMENUPERMISO WHERE C_LOGIN='"+usuario+"'\n"+
                     " AND C_SUCURSAL='"+sucursal+"'";
             rs=ConexionBD.querySelect(query);
             if(rs.next()){
                 rs.close();
                 return true;
                 
             }else{
                 rs.close();
                 return false;
                 
             }
             
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
           
             return false;
             
         }
          
    }
    
    public boolean revisaOpcionMenu(String opcion){
       
         try {
             ResultSet rs;
             String query="SELECT (1) FROM TME_LINK\n"+
                     "WHERE C_LINK='"+opcion+"' AND N_MODULO='"+(String)this.cmbModulosMenu.getSelectedItem()+"'";
             rs=ConexionBD.querySelect(query);
             if(rs.next()) {
                 rs.close();
                 return true;
                 
             } else {
                 rs.close();
                 return false;
                 
             }
             
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
             
             return false;
         }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAdministra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAdministra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAdministra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAdministra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAdministra().setVisible(true);
            }
        });
    }
    
    public void seleccionaUsuarios(){
        cmbUsuarios.removeAllItems();
        cmbUsuarios.addItem("Usuarios");
        cmbUsuarios2.removeAllItems();
        cmbUsuarios2.addItem("Usuarios");
         try {
             String query;
             ResultSet rs;
             query="SELECT DISTINCT C_LOGIN FROM TUS_USERMENUPERMISO\n"+
                     " WHERE C_SUCURSAL='"+this.getSuc()+"'";
             rs=ConexionBD.querySelect(query);
             while(rs.next())
             {
                 cmbUsuarios.addItem((rs.getString("C_LOGIN")));
                 cmbUsuarios2.addItem((rs.getString("C_LOGIN")));
             }
             rs.close();
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    
    
    
    public void seleccionaServidores(){
        cmbServidores.removeAllItems();
        cmbServidores.addItem("Servidores NO Asignados");
        
         try {
             String query;
             ResultSet rs;
             query="SELECT D.C_IPSERVIDOR AS IPSERV,D.N_IDSERVIDOR AS IDSERV\n" +
                    "FROM TUS_SERVIDORES D\n" +
                    "WHERE D.C_IPSERVIDOR NOT IN( SELECT B.C_IPSERVIDOR AS IPSERV\n" +
                                            "FROM TUS_ACCESOSERVIDOR A,TUS_SERVIDORES B\n" +
                                            "WHERE A.N_IDSERVIDOR=B.N_IDSERVIDOR \n" +
                                            "AND A.C_LOGIN='"+(String)cmbUsuarios2.getSelectedItem()+"')";
             rs=ConexionBD.querySelect(query);
             while(rs.next())
             {
                 cmbServidores.addItem((rs.getString("IDSERV")+"-"+rs.getString("IPSERV")));
                 
             }
             rs.close();
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    public void seleccionaInstancias(){
        cmbInstancias.removeAllItems();
        cmbInstancias.addItem("Instancias");
        
         try {
             String query;
             ResultSet rs;
             query="SELECT N_IDINSTANCIA,C_NOMBREINSTANCIA,C_DESCRIPCION FROM TUS_INSTANCIAS";
             rs=ConexionBD.querySelect(query);
             while(rs.next())
             {
                 cmbInstancias.addItem((rs.getString("N_IDINSTANCIA")+"-"+rs.getString("C_NOMBREINSTANCIA")+"/"+rs.getString("C_DESCRIPCION")));
                 
             }
             rs.close();
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    public void seleccionaBD(){
        cmbBD.removeAllItems();
        cmbBD.addItem("Bases de datos");
        
         try {
             String query;
             ResultSet rs;
             query="SELECT N_IDBD,C_NOMBREBD,C_REFERENCIABD FROM TUS_BD WHERE C_ACCION='V'";
             rs=ConexionBD.querySelect(query);
             while(rs.next())
             {
                 cmbBD.addItem((rs.getString("N_IDBD")+"-"+rs.getString("C_NOMBREBD")+"/"+rs.getString("C_REFERENCIABD")));
                 
             }
             rs.close();
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    
    
    public void llenaTablaServidor(){
        
        DefaultTableModel dtm= new DefaultTableModel(new String[] { "ID Acceso", "IP Servidor", "Nombre Servidor"},0);
        
        tblUsuarioServidor.setModel(dtm);
        
        String query="SELECT A.N_IDACCESO AS IDACCESO,A.C_LOGIN AS LOGIN,B.C_IPSERVIDOR AS IPSERV,B.C_NOMBRESERVIDOR AS NOMSERV,A.N_IDSERVIDOR AS IDSERV \n" +
        "FROM TUS_ACCESOSERVIDOR A,TUS_SERVIDORES B\n" +
        "WHERE A.N_IDSERVIDOR=B.N_IDSERVIDOR\n" +
        "AND A.C_LOGIN='"+(String) cmbUsuarios2.getSelectedItem()+"'";
        
        ResultSet rs;
        int f=0,cuenta=0;
        rs=ConexionBD.querySelect(query);
         try {
            
              
             while(rs.next()){
                dtm.setRowCount(rs.getRow());
                 
                 dtm.setValueAt(rs.getString("IDACCESO"), f, 0);
                 dtm.setValueAt(rs.getString("IPSERV"), f, 1);
                 dtm.setValueAt(rs.getString("NOMSERV"), f, 2);
                  f++;
                 
             }
             rs.close();
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    
    public void vaciaTablaUserServerBDInstancia(){
        DefaultTableModel dtm = (DefaultTableModel) tblUSBDI.getModel();
        dtm.setRowCount(0);
      
    }
    public void llenaTablaUserServerBDInstancia(){
        DefaultTableModel dtm2= new DefaultTableModel(new String[] { "ID ","","Instancia","Base de Datos","Ref. Base de Datos","Estado","",""},0);
        
        tblUSBDI.setModel(dtm2);
        tblUSBDI.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblUSBDI.getColumnModel().getColumn(0).setWidth(20);
        tblUSBDI.getColumnModel().getColumn(0).setMaxWidth(20);
        tblUSBDI.getColumnModel().getColumn(0).setMinWidth(20);
        //columna oculta
        tblUSBDI.getColumnModel().getColumn(1).setMaxWidth(0);
        tblUSBDI.getColumnModel().getColumn(1).setMinWidth(0);
        tblUSBDI.getColumnModel().getColumn(1).setWidth(0);
        tblUSBDI.getColumnModel().getColumn(1).setPreferredWidth(0);
        //fin columna oculta
        tblUSBDI.getColumnModel().getColumn(2).setPreferredWidth(10);
        tblUSBDI.getColumnModel().getColumn(3).setPreferredWidth(50);
        tblUSBDI.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblUSBDI.getColumnModel().getColumn(5).setPreferredWidth(5);
        //columna oculta
        tblUSBDI.getColumnModel().getColumn(6).setMaxWidth(0);
        tblUSBDI.getColumnModel().getColumn(6).setMinWidth(0);
        tblUSBDI.getColumnModel().getColumn(6).setWidth(0);
        tblUSBDI.getColumnModel().getColumn(6).setPreferredWidth(0);
        //fin columna oculta
        //columna oculta
        tblUSBDI.getColumnModel().getColumn(7).setMaxWidth(0);
        tblUSBDI.getColumnModel().getColumn(7).setMinWidth(0);
        tblUSBDI.getColumnModel().getColumn(7).setWidth(0);
        tblUSBDI.getColumnModel().getColumn(7).setPreferredWidth(0);
        //fin columna oculta
        
        
        String query="SELECT B.N_IDSIBD AS IDSIBD, A.N_IDACCESO AS IDACCESO,A.C_LOGIN AS LOGIN,B.N_IDINSTANCIA AS IDINST,C.C_NOMBREINSTANCIA AS NOMINST,B.N_IDBD AS IDBD,D.C_NOMBREBD AS NOMBD,B.C_ACCION AS ESTADO,D.C_REFERENCIABD AS REFBD\n" +
                    "FROM TUS_ACCESOSERVIDOR A,TUS_SERVINSTBD B,TUS_INSTANCIAS C,TUS_BD D\n" +
                    "WHERE A.N_IDACCESO=B.N_IDACCESO\n" +
                    "AND B.N_IDINSTANCIA=C.N_IDINSTANCIA\n" +
                    "AND B.N_IDBD=D.N_IDBD\n" +
                    "AND A.N_IDACCESO='"+ tblUsuarioServidor.getValueAt(tblUsuarioServidor.getSelectedRow(), 0)+"'\n" +
                    "AND A.C_LOGIN='"+(String) cmbUsuarios2.getSelectedItem()+"'";
        
        ResultSet rs;
        int f=0,cuenta=0;
        rs=ConexionBD.querySelect(query);
         try {
            
              
             while(rs.next()){
                dtm2.setRowCount(rs.getRow());
                 
                 dtm2.setValueAt(rs.getString("IDSIBD"), f, 0);
                 dtm2.setValueAt(rs.getString("IDACCESO"), f, 1);
                 dtm2.setValueAt(rs.getString("NOMINST"), f, 2);
                 dtm2.setValueAt(rs.getString("NOMBD"), f, 3);
                 dtm2.setValueAt(rs.getString("REFBD"), f, 4);
                 dtm2.setValueAt(rs.getString("ESTADO"), f, 5);
                 dtm2.setValueAt(rs.getString("IDINST"), f, 6);
                 dtm2.setValueAt(rs.getString("IDBD"), f, 7);
                  f++;
                 
             }
             rs.close();
         } catch (SQLException ex) {
             Logger.getLogger(frmAdministra.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    public void configuraTablaServidor(){
        
        DefaultTableModel dtm= new DefaultTableModel(new String[] { "ID Servidor", "IP Servidor", "Nombre Servidor"},0);
        
        tblUsuarioServidor.setModel(dtm);
        tblUsuarioServidor.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblUsuarioServidor.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblUsuarioServidor.getColumnModel().getColumn(2).setPreferredWidth(50);
     
        DefaultTableModel dtm2= new DefaultTableModel(new String[] { "ID ", "", "Instancia","Base de Datos","Ref. Base de Datos","Estado","",""},0);
        
        tblUSBDI.setModel(dtm2);
       
        /*tblUSBDI.getColumnModel().getColumn(0).setPreferredWidth(5);
        tblUSBDI.getColumnModel().getColumn(1).setPreferredWidth(20);*/
        //columna oculta
        tblUSBDI.getColumnModel().getColumn(1).setMaxWidth(0);
        tblUSBDI.getColumnModel().getColumn(1).setMinWidth(0);
        tblUSBDI.getColumnModel().getColumn(1).setWidth(0);
        tblUSBDI.getColumnModel().getColumn(1).setPreferredWidth(0);
        
        tblUSBDI.getColumnModel().getColumn(6).setMaxWidth(0);
        tblUSBDI.getColumnModel().getColumn(6).setMinWidth(0);
        tblUSBDI.getColumnModel().getColumn(6).setWidth(0);
        tblUSBDI.getColumnModel().getColumn(6).setPreferredWidth(0);
        
        tblUSBDI.getColumnModel().getColumn(7).setMaxWidth(0);
        tblUSBDI.getColumnModel().getColumn(7).setMinWidth(0);
        tblUSBDI.getColumnModel().getColumn(7).setWidth(0);
        tblUSBDI.getColumnModel().getColumn(7).setPreferredWidth(0);
        //fin columna oculta
        /*
        tblUSBDI.getColumnModel().getColumn(2).setPreferredWidth(20);
        tblUSBDI.getColumnModel().getColumn(3).setPreferredWidth(55);
        tblUSBDI.getColumnModel().getColumn(4).setPreferredWidth(80);
        tblUSBDI.getColumnModel().getColumn(5).setPreferredWidth(5);*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignaPermiso;
    private javax.swing.JButton btnAsignarServer;
    private javax.swing.JButton btnGuardaPermisos;
    private javax.swing.JButton btnGuardarOpcionesMenu;
    private javax.swing.JCheckBox chkActivos;
    private javax.swing.JCheckBox chkAlmacen;
    private javax.swing.JCheckBox chkCambios;
    private javax.swing.JCheckBox chkContabilidad;
    private javax.swing.JCheckBox chkEventos;
    private javax.swing.JCheckBox chkFacturacion;
    private javax.swing.JCheckBox chkPersonal;
    private javax.swing.JCheckBox chkProduccion;
    private javax.swing.JCheckBox chkVehiculos;
    private javax.swing.JCheckBox chkVentas;
    private javax.swing.JComboBox cmbBD;
    private javax.swing.JButton cmbGuardaUserNuevo;
    private javax.swing.JComboBox cmbInstancias;
    private javax.swing.JComboBox cmbModulos;
    private javax.swing.JComboBox cmbModulosMenu;
    private javax.swing.JComboBox cmbServidores;
    private javax.swing.JComboBox cmbTipoMenu;
    private javax.swing.JComboBox cmbUsuarios;
    private javax.swing.JComboBox cmbUsuarios2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JInternalFrame jInternalFrame4;
    private javax.swing.JInternalFrame jInternalFrame5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblInstancia;
    private javax.swing.JLabel lblNombreJar;
    private javax.swing.JLabel lblPermisos;
    private javax.swing.JLabel lblServidor;
    private javax.swing.JLabel lblSucursal;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JList lstLista;
    private javax.swing.JTable tblUSBDI;
    private javax.swing.JTable tblUsuarioServidor;
    private javax.swing.JTextField txtDescOpcion;
    private javax.swing.JButton txtGuardaOpciones;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNombreJar;
    private javax.swing.JTextField txtNombreOpcion;
    private javax.swing.JTextField txtRuta;
    private javax.swing.JTextField txtSysdba;
    // End of variables declaration//GEN-END:variables
}
